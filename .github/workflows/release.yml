name: "publish"

on:
  push:
    branches:
      - release

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          # - platform: 'macos-latest' # for Arm based macs (M1 and above).
          #   args: '--target aarch64-apple-darwin'
          # - platform: 'macos-latest' # for Intel based macs.
          #   args: '--target x86_64-apple-darwin'
          # - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
          #   args: ''
          - platform: "windows-latest"
            args: ""
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        with:
          # Required due to the way Git works, without it this action won't be able to find any or the correct tags
          fetch-depth: 0

      - name: Get previous tag
        id: prev
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 0.0.1

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      # - name: install dependencies (ubuntu only)
      #   if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: Generate dependency hash
        id: deps
        shell: bash
        # env:
        #   RUNNER_OS is already present
        #   RUNNER_OS: ${{ runner.os }}
        run: |
          echo "Runner OS: $RUNNER_OS"
          node hash-deps.cjs >> $GITHUB_OUTPUT

      - name: Cache node_modules
        id: cache-nodemodules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ steps.deps.outputs.cache-key }}
          restore-keys: |
            cache-nodemodules-${{ runner.os }}-

      - name: install frontend dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm ci

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
          VITE_WEATHER_API_KEY: ${{ secrets.VITE_WEATHER_API_KEY }}
          MIXPANEL_TOKEN: ${{ secrets.MIXPANEL_TOKEN }}
        with:
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: "v__VERSION__"
          releaseBody: |
            **Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ steps.prev.outputs.tag }}...v__VERSION__

            **⚠️ Heads up**
            You might see a warning when running the installer. Don't worry - it's expected and totally safe. You can go ahead and continue the installation.

            **💡 Which file to download?**

            - `Delta.Widgets___VERSION___x64-setup.exe` -> Recommended for most users
            - `Delta.Widgets___VERSION___x64_en-US.msi` -> For advanced users/IT admins

            \* This app collects anonymous usage statistics (install and widget enable events) via Mixpanel. No personal data is tracked. Data is only used to measure installs and improve the app.
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
